import subprocess
import sys
import os
import time
from datetime import datetime, timedelta

# ‚úÖ ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ stdout ‡πÉ‡∏ä‡πâ UTF-8 ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≤‡∏°‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
sys.stdout.reconfigure(encoding="utf-8", errors="ignore")

# ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏±‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
def run_all_scripts():
    print(f"\nüöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏±‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå ‡∏ì ‡πÄ‡∏ß‡∏•‡∏≤: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")

    scripts = [
        ["ANT_Final/Thai_News_Database.py"],  # Step 1 - ‡∏Ç‡πà‡∏≤‡∏ß‡πÑ‡∏ó‡∏¢
        ["ANT_Final/America_News_Database.py"],  # Step 2 - ‡∏Ç‡πà‡∏≤‡∏ß Investing.com
        ["ANT_Final/Final_News_Merge.py"],  # Step 3 - ‡∏£‡∏ß‡∏°‡∏Ç‡πà‡∏≤‡∏ß
        ["Finbert/Finbert.py"],  # Step 4 - ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå Sentiment
        ["Finbert/calculate_weighted_sentiment.py"],  # Step 5 - ‡∏ó‡∏≥ daily sentiment
        ["ANT_FinaL/News_Database.py"],  # Step 6 - ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Database
        ["American_stocks/GetdataAmericanStock.py"],  # Step 7 - ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å USA Stock
        ["Thai_stocks/GetdataThaiStocks.py"],  # Step 8 - ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Thai Stock
        ["combine.py"],  # Step 9 - ‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏≥ AI
        ["ANT_FinaL/Stock_Database.py"],  # Step 10 - ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Stock ‡∏•‡∏á Database
    ]

    def is_script_exist(script_path):
        """‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ script ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á"""
        return os.path.isfile(script_path)

    for step, script_set in enumerate(scripts, start=1):
        processes = []
        print(f"\n--- Step {step}: Running {script_set} ---\n")

        for script in script_set:
            if not is_script_exist(script):
                print(f"‚ùå Error: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå `{script}` ‡∏Ç‡πâ‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô...")
                continue

            try:
                process = subprocess.Popen(
                    [sys.executable, script],
                    stdout=subprocess.PIPE,
                    stderr=subprocess.PIPE,
                    text=True,
                    encoding="utf-8",
                    errors="ignore"  # ‚úÖ ‡∏Ç‡πâ‡∏≤‡∏° Unicode Error ‡πÄ‡∏ä‡πà‡∏ô ‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥
                )
                processes.append((script, process))
            except Exception as e:
                print(f"‚ùå Error: ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏±‡∏ô `{script}` ‡πÑ‡∏î‡πâ: {e}")
                continue

        for script, process in processes:
            stdout, stderr = process.communicate()
            print(f"\nüìå Output ‡∏à‡∏≤‡∏Å `{script}`:\n{stdout.strip()}")
            if stderr.strip():
                print(f"‚ö†Ô∏è Error ‡∏à‡∏≤‡∏Å `{script}`:\n{stderr.strip()}")

        print(f"\n‚úÖ --- Step {step} ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå ---\n")

# ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏≠‡∏à‡∏ô‡∏ñ‡∏∂‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏á‡∏Ñ‡∏∑‡∏ô 1 ‡∏ô‡∏≤‡∏ó‡∏µ
def wait_until_midnight():
    now = datetime.now()
    next_run_time = (now + timedelta(days=1)).replace(hour=0, minute=1, second=0, microsecond=0)
    wait_seconds = (next_run_time - now).total_seconds()

    print(f"\n‚è≥ ‡∏à‡∏∞‡∏£‡∏±‡∏ô‡∏£‡∏≠‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å {int(wait_seconds)} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ({next_run_time.strftime('%Y-%m-%d %H:%M:%S')})...\n")
    time.sleep(wait_seconds)

# ‚úÖ ‡∏•‡∏π‡∏õ‡∏£‡∏±‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏ï‡∏≠‡∏ô 00:01 ‡∏ô.
while True:
    run_all_scripts()
    wait_until_midnight()
