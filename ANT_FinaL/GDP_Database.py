import os
import pandas as pd
import requests
import mysql.connector
from dotenv import load_dotenv
import sys

# ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô UnicodeEncodeError
sys.stdout.reconfigure(encoding="utf-8", errors="ignore")

# ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏à‡∏≤‡∏Å .env
load_dotenv()

# ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• GDP ‡∏à‡∏≤‡∏Å World Bank API
def fetch_gdp_data(country_codes, start_year=2000, end_year=2023):
    url = f"https://api.worldbank.org/v2/country/{';'.join(country_codes)}/indicator/NY.GDP.MKTP.CD?date={start_year}:{end_year}&format=json&per_page=500"
    response = requests.get(url)
    
    if response.status_code != 200:
        raise Exception("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å World Bank API ‡πÑ‡∏î‡πâ")
    
    data = response.json()
    if not data or len(data) < 2:
        raise Exception("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• GDP ‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤‡πÑ‡∏î‡πâ")

    records = []
    for entry in data[1]:  # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• GDP ‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà index 1
        if entry["value"] is not None:
            records.append({
                "Country": entry["country"]["value"],
                "Country Code": entry["country"]["id"],
                "Year": int(entry["date"]),
                "GDP (current US$)": float(entry["value"])
            })

    return pd.DataFrame(records)

# ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• GDP ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ó‡∏¢‡πÅ‡∏•‡∏∞‡∏≠‡πÄ‡∏°‡∏£‡∏¥‡∏Å‡∏≤
countries = ["THA", "USA"]
df_gdp = fetch_gdp_data(countries, start_year=2000, end_year=2023)

# ‚úÖ ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤ NaN ‡πÄ‡∏õ‡πá‡∏ô None
df_gdp = df_gdp.where(pd.notna(df_gdp), None)

# ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á CSV
df_gdp.to_csv("GDP_AllData.csv", index=False)
df_gdp[df_gdp["Country Code"] == "THA"].to_csv("GDP_TH.csv", index=False)
df_gdp[df_gdp["Country Code"] == "USA"].to_csv("GDP_US.csv", index=False)
print("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå CSV ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: GDP_AllData.csv, GDP_TH.csv, GDP_US.csv")

# ‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
try:
    print("üîó ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ...")
    conn = mysql.connector.connect(
        host=os.getenv("DB_HOST"),
        user=os.getenv("DB_USER"),
        password=os.getenv("DB_PASSWORD"),
        database=os.getenv("DB_NAME"),
        autocommit=True
    )
    cursor = conn.cursor()
    print("‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

    # ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Database
    cursor.execute("SELECT Country, Year FROM GDP")
    existing_data = set(cursor.fetchall())

    # ‚úÖ ‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô Database
    new_data = [
        (row["Country"], row["Country Code"], row["Year"], row["GDP (current US$)"])
        for _, row in df_gdp.iterrows()
        if (row["Country"], row["Year"]) not in existing_data
    ]

    if new_data:
        insert_gdp_query = """
        INSERT INTO GDP (Country, `Country Code`, Year, `GDP (current US$)`)
        VALUES (%s, %s, %s, %s);
        """
        cursor.executemany(insert_gdp_query, new_data)
        print(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á GDP: {len(new_data)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
    else:
        print("‚úÖ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°")

except mysql.connector.Error as err:
    print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {err}")

finally:
    cursor.close()
    conn.close()
    print("üîπ ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß")
